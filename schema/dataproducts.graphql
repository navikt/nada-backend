type Dataproduct @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.Dataproduct"){
    id: ID!
    name: String!
    description: String
    created: Time!
    lastModified: Time!
    repo: String
    pii: Boolean!
    keywords: [String!]!
    owner: Owner!
    datasource: Datasource!
    requesters: [String!]!
    access: [Access!]! @authenticated
}

type Owner @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.Owner"){
    group: String!
    teamkatalogen: String!
}

type BigQuery @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.BigQuery") {
    projectID: String!
    dataset: String!
    table: String!
}

union Datasource @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.Datasource") = BigQuery

type Access @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.Access") {
    id: ID!
    subject: String!
    granter: String!
    expires: Time
    created: Time!
    revoked: Time
}

extend type Query {
    dataproduct(id: ID!): Dataproduct!
    dataproducts(limit: Int, offset: Int): [Dataproduct!]!
}

input NewBigQuery @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.NewBigQuery") {
    projectID: String!
    dataset: String!
    table: String!
}

input NewDataproduct @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.NewDataproduct") {
    name: String!
    description: String
    repo: String
    pii: Boolean!
    keywords: [String!]
    group: String!
    bigquery: NewBigQuery!
    requesters: [String!]
}

input UpdateDataproduct @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.UpdateDataproduct") {
    name: String!
    description: String
    repo: String
    pii: Boolean!
    keywords: [String!]
    requesters: [String!]
}

extend type Mutation {
    createDataproduct(input: NewDataproduct!): Dataproduct! @authenticated
    updateDataproduct(id: ID!, input: UpdateDataproduct!): Dataproduct! @authenticated
    deleteDataproduct(id: ID!) : Boolean! @authenticated
    addRequesterToDataproduct(dataproductID: ID!, subject: String!): Boolean! @authenticated
    removeRequesterFromDataproduct(dataproductID: ID!, subject: String!): Boolean! @authenticated
    grantAccessToDataproduct(dataproductID: ID!, expires: Time, subject: String): Access! @authenticated
    revokeAccessToDataproduct(id: ID!): Boolean! @authenticated
}
