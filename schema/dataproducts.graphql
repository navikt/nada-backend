"""
Dataproduct contains metadata on a datasource.
"""
type Dataproduct @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.Dataproduct"){
    "id is the identifier for the dataproduct"
    id: ID!
    "name of the dataproduct"
    name: String!
    "description of the dataproduct"
    description: String
    "created is the timestamp for when the dataproduct was created"
    created: Time!
    "lastModified is the timestamp for when the dataproduct was last modified"
    lastModified: Time!
    "repo is the url of the repository containing the code to create the dataproduct"
    repo: String
    "keywords for the dataproduct used as tags."
    keywords: [String!]!
    "slug is the dataproduct slug"
    slug: String!
    "owner of the dataproduct. Changes to the dataproduct can only be done by a member of the owner."
    owner: Owner!
    "datasets is the list of associated datasets."
    datasets: [Dataset!]!
}

"""
GroupStats contains statistics on a group.
"""
type GroupStats @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.GroupStats") {
    "email of the group"
    email: String!
    "number of dataproducts owned by the group"
    dataproducts: Int!
}

extend type Query {
    """
    dataproduct returns the given dataproduct.
    """
    dataproduct(
        "id of the requested dataproduct."
        id: ID!
    ): Dataproduct!

    """
    dataproducts returns a list of dataproducts. Pagination done using the arguments.
    """
    dataproducts(
        "limit the number of returned dataproducts."
        limit: Int
        "offset the list of returned dataproducts. Used as pagination with PAGE-INDEX * limit."
        offset: Int
        "service is the third party service."
        service: MappingService
    ): [Dataproduct!]!

    """
    groupStats returns statistics for groups that have created dataproducts.
    """
    groupStats(
        "limit the number of returned groups."
        limit: Int
        "offset the list of returned groups. Used as pagination with PAGE-INDEX * limit."
        offset: Int
    ): [GroupStats!]!
}

"""
NewDataproduct contains metadata for creating a new dataproduct
"""
input NewDataproduct @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.NewDataproduct") {
    "name of dataproduct"
    name: String!
    "description of the dataproduct"
    description: String
    "repo is the url of the repository containing the code to create the dataproduct"
    repo: String
    "pii indicates whether it is personal identifiable information in the dataproduct"
    pii: Boolean!
    "keywords for the dataproduct used as tags."
    keywords: [String!]
    "owner group email for the dataproduct."
    group: String!
    "owner Teamkatalogen URL for the dataproduct."
    teamkatalogenURL: String
}

"""
UpdateDataproduct contains metadata for updating a dataproduct
"""
input UpdateDataproduct @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.UpdateDataproduct") {
    "name of dataproduct"
    name: String!
    "description of the dataproduct"
    description: String
    "repo is the url of the repository containing the code to create the dataproduct"
    repo: String
    "pii indicates whether it is personal identifiable information in the dataproduct"
    pii: Boolean!
    "owner Teamkatalogen URL for the dataproduct."
    teamkatalogenURL: String
    "keywords for the dataproduct used as tags."
    keywords: [String!]
}

extend type Mutation {
    """
    createDataproduct creates a new dataproduct

    Requires authentication.
    """
    createDataproduct(
        "input contains information about the new dataproduct."
        input: NewDataproduct!
    ): Dataproduct! @authenticated

    """
    updateDataproduct updates an existing dataproduct

    Requires authentication.
    """
    updateDataproduct(
        "id of requested dataproduct."
        id: ID!
        "input contains information about the updated dataproduct."
        input: UpdateDataproduct!
    ): Dataproduct! @authenticated


    """
    deleteDataproduct deletes a dataproduct.

    Requires authentication.
    """
    deleteDataproduct(
        "id of dataproduct."
        id: ID!
    ) : Boolean! @authenticated
}
