union SearchResult @goModel(
    model: "github.com/navikt/nada-backend/pkg/graph/models.SearchResult"
) = Dataproduct | Dataset | Story


enum SearchType @goModel(
    model: "github.com/navikt/nada-backend/pkg/graph/models.SearchType"
) {
    dataproduct
    story
    dataset
}

type SearchResultRow  @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.SearchResultRow") {
    excerpt: String! @goField(forceResolver: true)
    result: SearchResult!
}

input SearchQuery @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.SearchQueryOld") {
    """
    text is used as freetext search.

    Use " to identify phrases. Example: "hello world"

    Use - to exclude words. Example "include this -exclude -those"

    Use OR as a keyword for the OR operator. Example "night OR day"
    """
    text: String

    "keyword filters results on the keyword."
    keyword: String

    "group filters results on the group."
    group: String

    "limit the number of returned search results."
    limit: Int

    "offset the list of returned search results. Used as pagination with PAGE-INDEX * limit."
    offset: Int
}

input SearchOptions @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.SearchQuery") {
    """
    text is used as freetext search.

    Use " to identify phrases. Example: "hello world"

    Use - to exclude words. Example "include this -exclude -those"

    Use OR as a keyword for the OR operator. Example "night OR day"
    """
    text: String

    "keywords filters results on the keyword."
    keywords: [String!]

    "groups filters results on the group."
    groups: [String!]

    "services filters results on the service."
    services: [MappingService!]

    "types to search on"
    types: [SearchType!]

    "limit the number of returned search results."
    limit: Int

    "offset the list of returned search results. Used as pagination with PAGE-INDEX * limit."
    offset: Int
}

extend type Query {
    "search through existing dataproducts."
    search(
        "q is the search query."
        q: SearchQuery
        "options is the search options."
        options: SearchOptions
    ): [SearchResultRow!]!
}
