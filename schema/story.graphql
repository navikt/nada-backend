type Story @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.GraphStory") {
	id: ID!
	name: String!
	created: Time!
	lastModified: Time
	owner: Owner
	views: [StoryView!]! @goField(forceResolver: true)
}

interface StoryView @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.GraphStoryView") {
	id: ID!
}

type StoryViewHeader implements StoryView @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.StoryViewHeader") {
	id: ID!
	content: String!
	level: Int!
}

type StoryViewMarkdown implements StoryView @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.StoryViewMarkdown") {
	id: ID!
	content: String!
}

type StoryViewPlotly implements StoryView @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.StoryViewPlotly") {
	id: ID!
	data: [Map!]!
	layout: Map!
}

extend type Query {
	stories(draft: Boolean): [Story!]!
	story(id: ID!, draft: Boolean): Story!
	storyView(id: ID!, draft: Boolean): StoryView!
}

extend type Mutation {
	publishStory(id: ID!, group: String!) : Story! @authenticated
	publishStoryWithID(id: ID!, target: ID!) : Story! @authenticated
}
