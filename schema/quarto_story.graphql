"""
QuartoStory contains the metadata and content of data stories.
"""
type QuartoStory @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.QuartoStory"){
	"id of the data story."
	id: ID!
	"name of the data story."
	name: String!
	"creator of the data story."
	creator: String!
	"description of the quarto story."
	description: String!
	"keywords for the story used as tags."
	keywords: [String!]!
    "teamkatalogenURL of the creator"
    teamkatalogenURL: String
    "Id of the creator's product area."
    productAreaID: String
    "Id of the creator's team."
    teamID: String
    "created is the timestamp for when the dataproduct was created"
    created: Time!
    "lastModified is the timestamp for when the dataproduct was last modified"
    lastModified: Time
    "group is the owner group of the quarto"
    group: String!
}

"The `UploadFile, // b.txt` scalar type represents a multipart file upload."
scalar Upload

"""
NewQuartoStory contains the metadata and content of quarto stories.
"""
input NewQuartoStory @goModel(model: "github.com/navikt/nada-backend/pkg/graph/models.NewQuartoStory"){
	"name of the quarto story."
	name: String!
	"description of the quarto story."
	description: String!
	"keywords for the story used as tags."
	keywords: [String!]!
    "teamkatalogenURL of the creator"
    teamkatalogenURL: String
    "Id of the creator's product area."
    productAreaID: String
    "Id of the creator's team."
    teamID: String
    "group is the owner group of the quarto"
    group: String!
}

extend type Mutation {
	"""
    createQuartoStory creates a quarto story.

    Requires authentication.
    """
	createQuartoStory(
		"file is the data for story"
		file : Upload!
		"input contains metadata about the new quarto story."
		input: NewQuartoStory!
	): QuartoStory! @authenticated

 	"""
    updateQuartoStoryMetadata updates metadata on an existing quarto story.

    Requires authentication.
    """
	updateQuartoStoryMetadata(
		"id is the id for the quarto story you want to update."
		id: ID!
		"name of the quarto story"
		name: String!
	  	"description of the quarto story."
    	description: String!
    	"keywords for the quarto story used as tags."
   		keywords: [String!]!
		"owner Teamkatalogen URL for the dataproduct."
		teamkatalogenURL: String
	    "Id of the team's product area."
    	productAreaID: String
        "Id of the team."
    	teamID: String
        "group is the owner group of the quarto"
        group: String!
	): QuartoStory! @authenticated

	"""
    deleteQuartoStory deletes an existing quarto story.

    Requires authentication.
    """
	deleteQuartoStory(
		"id is the id for the quarto story."
		id: ID!
	): Boolean! @authenticated

}

extend type Query {
	"""
    quartoStory returns the given story.
    """
	quartoStory(
		"id of the story."
		id: ID!
	): QuartoStory!
}
