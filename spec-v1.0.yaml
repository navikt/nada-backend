openapi: 3.0.2
info:
  title: NADA
  version: "1.0"
servers:
  - url: "https://localhost:8080/api"
  - url: "https://nada.dev.intern.nav.no/api"
  - url: "https://nada.intern.nav.no/api"

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: jwt
  schemas:
    DataproductCollection:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        repo:
          type: string
        last_modified:
          type: string
          format: date-time
        created:
          type: string
          format: date-time
        owner:
          $ref: "#/components/schemas/Owner"
        keywords:
          type: array
          items:
            type: string
        dataproducts:
          type: array
          items:
            $ref: "#/components/schemas/DataproductSummary"
      required:
        - id
        - name
        - slug
        - owner
        - created
        - last_modified
        - dataproducts

    NewDataproductCollection:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        repo:
          type: string
        owner:
          $ref: "#/components/schemas/Owner"
        keywords:
          type: array
          items:
            type: string
      required:
        - name
        - owner

    UpdateDataproductCollection:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        repo:
          type: string
        keywords:
          type: array
          items:
            type: string
      required:
        - name

    Dataproduct:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        slug:
          type: string
        repo:
          type: string
        pii:
          type: boolean
        owner:
          $ref: "#/components/schemas/Owner"
        type:
          $ref: "#/components/schemas/DataproductType"
        dataSource:
          oneOf:
            - $ref: "#/components/schemas/BigQuery"
      required:
        - id
        - name
        - type
        - pii
        - owner
        - bigquery

    NewDataproduct:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        pii:
          type: boolean
        owner:
          $ref: "#/components/schemas/Owner"
        bigquery:
          $ref: "#/components/schemas/BigQuery"
      required:
        - name
        - pii
        - owner
        - bigquery # Update this to a oneOf when we have more than bigquery

    DataproductSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: "#/components/schemas/DataproductType"
      required:
        - id
        - name
        - type

    DataproductType:
      type: string
      enum:
        - bigquery

    Owner:
      type: object
      properties:
        team:
          type: string
        teamkatalogen:
          type: string
      required:
        - team

    BigQuery:
      type: object
      properties:
        project_id:
          type: string
        dataproduct:
          type: string
        table:
          type: string
      required:
        - project_id
        - dataproduct
        - table

    UserInfo:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        teams:
          type: array
          items:
            type: string
      required:
        - name
        - email
        - teams

    TableColumn:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        mode:
          type: string
        description:
          type: string
      required:
        - name
        - type
        - mode
        - description

    DataproductMetadata:
      type: object
      properties:
        dataproduct_id:
          type: string
        schema:
          type: array
          items:
            $ref: "#/components/schemas/TableColumn"
      required:
        - dataproduct_id
        - schema

    SearchResultEntry:
      type: object
      properties:
        url:
          type: string
        type:
          $ref: "#/components/schemas/SearchResultType"
        id:
          type: string
        name:
          type: string
        excerpt:
          type: string
      required:
        - url
        - type
        - id
        - name
        - excerpt

    SearchResultType:
      type: string
      enum:
        - dataproduct
        - DataproductCollection
        - datapackage

paths:
  /userinfo:
    get:
      security:
        - cookieAuth: []
      description: "get user info"
      operationId: "getUserInfo"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/UserInfo"

  /teams/{id}/gcp_projects:
    parameters:
      - in: path
        name: id
        description: Team ID
        required: true
        schema:
          type: string
    get:
      security:
        - cookieAuth: []
      description: "Query and return all GCP projects for the team"
      operationId: "getGCPProjects"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                type: "array"
                items:
                  type: "string"

  /gcp/{id}/tables:
    parameters:
      - in: path
        name: id
        description: GCP project ID
        required: true
        schema:
          type: string
    get:
      security:
        - cookieAuth: []
      description: "Return all BigQuery tables in gcp project"
      operationId: "getBigQueryTables"
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/BigQuery"

  /collections:
    get:
      description: "List all DataproductCollections"
      operationId: "getDataproductCollections"
      parameters:
        - in: "query"
          name: "limit"
          schema:
            type: "integer"
            default: 15
        - in: "query"
          name: "offset"
          schema:
            type: "integer"
            default: 0
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataproductCollection"
    post:
      security:
        - cookieAuth: []
      description: "Create a new DataproductCollection"
      operationId: "createDataproductCollection"
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/NewDataproductCollection"
      responses:
        "201":
          description: "Created successfully"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/DataproductCollection"

  /collections/{id}:
    get:
      description: "List a DataproductCollection with dataproducts"
      operationId: "getDataproductCollection"
      parameters:
        - in: path
          name: id
          description: DataproductCollection ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataproductCollection"
    delete:
      security:
        - cookieAuth: []
      description: "Delete a DataproductCollection"
      operationId: "deleteDataproductCollection"
      parameters:
        - in: path
          name: id
          description: DataproductCollection ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Deleted OK"
    put:
      security:
        - cookieAuth: []
      description: "Update a DataproductCollection"
      operationId: "updateDataproductCollection"
      parameters:
        - in: path
          name: id
          description: DataproductCollection ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/UpdateDataproductCollection"
      responses:
        "200":
          description: "Updated OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/DataproductCollection"

  /dataproducts:
    post:
      security:
        - cookieAuth: []
      description: "Create a new dataproduct"
      operationId: "createDataproduct"
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/NewDataproduct"
      responses:
        "201":
          description: "Created successfully"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Dataproduct"

  /dataproducts/{id}:
    get:
      description: "Get dataproduct"
      operationId: "getDataproduct"
      parameters:
        - in: path
          name: id
          description: Dataproduct ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Dataproduct"
    put:
      security:
        - cookieAuth: []
      description: "Update a dataproduct"
      operationId: "updateDataproduct"
      parameters:
        - in: path
          name: id
          description: Dataproduct ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/NewDataproduct"
      responses:
        "200":
          description: "Updated OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Dataproduct"
    delete:
      security:
        - cookieAuth: []
      description: "Delete a dataproduct"
      operationId: "deleteDataproduct"
      parameters:
        - in: path
          name: id
          description: Dataproduct ID
          required: true
          schema:
            type: string
      responses:
        "204":
          description: "Deleted OK"

  /dataproducts/{id}/metadata:
    get:
      description: "Get dataproduct metadata"
      operationId: "getDataproductMetadata"
      parameters:
        - in: path
          name: id
          description: Dataproduct ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/DataproductMetadata"

  /search:
    parameters:
      - in: query
        name: q
        schema:
          type: string
      - in: "query"
        name: "limit"
        schema:
          type: "integer"
          default: 15
      - in: "query"
        name: "offset"
        schema:
          type: "integer"
          default: 0

    get:
      description: "Search in NADA"
      operationId: "search"
      responses:
        "200":
          description: Search result
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchResultEntry"
