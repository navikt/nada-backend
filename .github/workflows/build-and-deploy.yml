name: build and push
on: 
  push:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      environment:
        description: Environment du kj√∏rer i
        type: choice
        options:
          - dev
          - prod
        required: true

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          check-latest: true
      - name: Run tests
        run: make integration-test

  build-and-push:
    name: Build and push GAR
    runs-on: ubuntu-20.04
    needs: [integration-tests]
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Push docker image to GAR
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: nada
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
    
  deploy-dev:
    name: Deploy dev gcp
    runs-on: ubuntu-20.04
    needs: [build-and-push]
    steps:
      - name: Deploy to dev-gcp
        if: inputs.environment != 'prod'
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: .nais/dev-gcp.yml
          VAR: image=${{ needs.build-and-push.outputs.image }}

  deploy-prod:
    name: Deploy prod gcp
    runs-on: ubuntu-20.04
    needs: [build-and-push, deploy-dev]
    steps:
      - name: Deploy to prod-gcp
        if: github.ref == 'refs/heads/main' && inputs.environment != 'dev'|| inputs.environment == 'prod'
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: .nais/prod-gcp.yml
          VAR: image=${{ needs.build-and-push.outputs.image }}
