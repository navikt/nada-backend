name: build and push
on: push
jobs:
  set-version:
    name: Set version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: set version
        id: set-version
        run: echo ::set-output name=version::"$(date '+%Y-%m-%d')-$(git --no-pager log -1 --pretty=%h)"

  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-20.04
    needs: set-version
    steps:
    - uses: actions/checkout@master
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
           name: Build and push
    - name: Set up environment
      run: |
        version=${{ needs.set-version.outputs.version }}
        prefix=ghcr.io/${{ github.repository }}
        echo "image_version=$version" >> $GITHUB_ENV
        echo "image_prefix=$prefix" >> $GITHUB_ENV
        echo "IMAGE=$prefix:$version" >> $GITHUB_ENV
    - name: Login to GitHub Container Registry
      uses: docker/login-action@ab80d026d4753220c4243394c07c7d80f9638d06 # Use commit-sha1 instead of tag for security concerns
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Dockerimage
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ env.image_prefix }}:latest, ${{ env.IMAGE }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    -
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
    - name: Deploy to dev-gcp
      uses: nais/deploy/actions/deploy@master
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: dev-gcp
        RESOURCE: .nais/dev-gcp.yml
    - name: Deploy to prod-gcp
      uses: nais/deploy/actions/deploy@master
      env:
        APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
        CLUSTER: prod-gcp
        RESOURCE: .nais/prod-gcp.yml
