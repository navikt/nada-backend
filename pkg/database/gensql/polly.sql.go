// Code generated by sqlc. DO NOT EDIT.
// source: polly.sql

package gensql

import (
	"context"

	"github.com/google/uuid"
)

const addAccessDocumentation = `-- name: AddAccessDocumentation :one
INSERT INTO access_documentation ("access_id",
                                  "polly_id",
                                  "polly_name",
                                  "polly_url") 
VALUES ($1,
        $2,
        $3,
        $4)
RETURNING access_id, polly_id, polly_name, polly_url
`

type AddAccessDocumentationParams struct {
	AccessID  uuid.UUID
	PollyID   string
	PollyName string
	PollyUrl  string
}

func (q *Queries) AddAccessDocumentation(ctx context.Context, arg AddAccessDocumentationParams) (AccessDocumentation, error) {
	row := q.db.QueryRowContext(ctx, addAccessDocumentation,
		arg.AccessID,
		arg.PollyID,
		arg.PollyName,
		arg.PollyUrl,
	)
	var i AccessDocumentation
	err := row.Scan(
		&i.AccessID,
		&i.PollyID,
		&i.PollyName,
		&i.PollyUrl,
	)
	return i, err
}

const getPolly = `-- name: GetPolly :one
SELECT access_id, polly_id, polly_name, polly_url 
FROM access_documentation 
WHERE access_id = $1
`

func (q *Queries) GetPolly(ctx context.Context, accessID uuid.UUID) (AccessDocumentation, error) {
	row := q.db.QueryRowContext(ctx, getPolly, accessID)
	var i AccessDocumentation
	err := row.Scan(
		&i.AccessID,
		&i.PollyID,
		&i.PollyName,
		&i.PollyUrl,
	)
	return i, err
}
